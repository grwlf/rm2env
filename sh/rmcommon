#!/bin/sh

rmset() {
  if eval "test -z \"\$$1\"" ; then
    eval "export $1='$2'"
  fi
}

rmecho() {
  echo "$@"
}
rmwarn() {
  echo "$@"
}

rmdie() {
  echo "$@" >&2
  if test "$RM_GUI" = "y" ; then
    yad $RM_GUIARGS --text "$@" --button 'OK!gtk-ok'
  fi
  exit 1
}

rmdieL() {
  if test "$RM_GUI" = "y" ; then
    yad $RM_GUIARGS --text-info --filename="$1" --button 'OK!gtk-ok'
    cat "$1" >&2
  else
    cat "$1" >&2
  fi
  exit 1
}

rmcheck() {
  if test -d "$RME_XOCHITL" ; then
    rmdie "RM_XOCHITL($RM_XOCHITL) is not a dir"
  fi
}

rmdr() {
  if test -z "$RM_DRYRUN" ; then
    "$@"
  else
    echo "$@"
  fi
}

mkprogress() {
  # Create the progressbar
  test "$RM_GUI" = "y" || return 0
  d="$1"
  title="$2"
  test -d "$d" || return 1
  rm "$d/fifo" || true
  mkfifo "$d/fifo"
  yad $RM_GUIARGS --progress --pulsate --title="$title" < "$d/fifo" &
  echo "$!" > "$d/yad.pid"
  exec 5>"$d/fifo"
  RM_PF="5"
}

killprogress() {
  # Cleanup progressbar resources
  test "$RM_GUI" = "y" || return 0
  d="$1"
  test -d "$d" || return 1
  kill $(cat "$d/yad.pid") || true
  rm "$d/fifo" || true
  exec 5>&- || true
  RM_PF="1"
}

echoprogress() {
  # Update the progressbar
  test "$RM_GUI" = "y" || return 0
  echo "$2" >&5
  echo "#$3" >&5
}

RM_NOUSER="<INVALID_USER>"
RM_NOIP="<INVALID_IP>"
RM_NOPORT="<INVALID_PORT>"

RM_PF=1
if test -f "$(dirname "$0")/rmconfig" ; then
  . $(dirname "$0")/rmconfig
fi

rmset RM_GUI "y"
rmset RM_VERBOSE "n"
rmset RM_DRYRUN ""

rmset RM_GUIARGS ""
rmset RM_XOCHITL $HOME/.xochitl
rmset RM_SSH remarkable
rmset RM_VPSSSH ""
rmset RM_VPSRPORT "$RM_NOPORT"

rmset RM_VPSIP "$RM_NOIP" # Optional
rmset RM_VPSUSER "$RM_NOUSER" # Optional
rmset RM_VPSPORT "$RM_NOPORT" # Optional

